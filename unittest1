#include "stdafx.h"
#include "CppUnitTest.h"
#include "ord.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace UnitTest1
{		
	TEST_CLASS(UnitTest1)
	{
	public:
		
		TEST_METHOD(TestSimple)
		{
			int** ca = new int*[2];
			for (int i = 0; i < 2; ++i)
				ca[i] = new int[2];

			int** a = new int*[2];
			for (int i = 0; i < 2; ++i)
				a[i] = new int[2];


			int** b = new int*[2];
			for (int i = 0; i < 2; ++i)
				b[i] = new int[2];

			int** t = new int*[2];
			for (int i = 0; i < 2; ++i)
				t[i] = new int[2];

			a[0][0] = 1;
			a[0][1] = 2;
			a[1][0] = 3;
			a[1][1] = 4;
			b[0][0] =5 ;
			b[0][1] = 1;
			b[1][0] = 2;
			b[1][1] = 3;
			t[0][0] = 9;
			t[0][1] = 7;
			t[1][0] = 23;
			t[1][1] = 15;
			
			ca = simpleMul(a, b, 2, 2, 2, 2);
			for (int i = 0; i < 2; ++i)
			{
				for (int j = 0; i < 2; ++j)
				{
					Assert::AreEqual(t[i][j], ca[i][j], L"message", LINE_INFO());
				}
			}

			
		}


		TEST_METHOD(TestStr)
		{
			// TODO: Your test code here

			int** ca = new int*[2];
			for (int i = 0; i < 2; ++i)
				ca[i] = new int[2];

			int** a = new int*[2];
			for (int i = 0; i < 2; ++i)
				a[i] = new int[2];


			int** b = new int*[2];
			for (int i = 0; i < 2; ++i)
				b[i] = new int[2];
			int** t = new int*[2];
			for (int i = 0; i < 2; ++i)
				t[i] = new int[2];
			a[0][0] = 1;
			a[0][1] = 2;
			a[1][0] = 3;
			a[1][1] = 4;
			b[0][0] = 5;
			b[0][1] = 1;
			b[1][0] = 2;
			b[1][1] = 3;
			t[0][0] = 9;
			t[0][1] = 7;
			t[1][0] = 23;
			t[1][1] = 15;
			ca = strassenMul(a, b);
			

			
			for (int i = 0; i < 2; ++i)
			{
				for (int j = 0; i < 2; ++j)
				{
					Assert::AreEqual(t[i][j], ca[i][j], L"message", LINE_INFO());
				}
			}
			
		}

	};
}
